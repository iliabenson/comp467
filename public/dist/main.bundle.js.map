{"version":3,"sources":["/home/vagrant/comp467/frontend/src/$_lazy_route_resource lazy","/home/vagrant/comp467/frontend/src/app/app-routing.module.ts","/home/vagrant/comp467/frontend/src/app/app.component.css","/home/vagrant/comp467/frontend/src/app/app.component.html","/home/vagrant/comp467/frontend/src/app/app.component.ts","/home/vagrant/comp467/frontend/src/app/app.module.ts","/home/vagrant/comp467/frontend/src/app/canvas_whiteboard_options.ts","/home/vagrant/comp467/frontend/src/app/message.service.ts","/home/vagrant/comp467/frontend/src/app/messages/messages.component.css","/home/vagrant/comp467/frontend/src/app/messages/messages.component.html","/home/vagrant/comp467/frontend/src/app/messages/messages.component.ts","/home/vagrant/comp467/frontend/src/app/settings.service.ts","/home/vagrant/comp467/frontend/src/app/whiteboard/whiteboard.component.css","/home/vagrant/comp467/frontend/src/app/whiteboard/whiteboard.component.html","/home/vagrant/comp467/frontend/src/app/whiteboard/whiteboard.component.ts","/home/vagrant/comp467/frontend/src/environments/environment.ts","/home/vagrant/comp467/frontend/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vagrant/comp467/frontend/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { WhiteboardComponent } from './whiteboard/whiteboard.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/whiteboard', pathMatch: 'full' },\n  { path: 'whiteboard', component: WhiteboardComponent },\n  { path: '**', redirectTo: '/whiteboard' },\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/vagrant/comp467/frontend/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* AppComponent's private CSS styles */\\nh1 {\\n  font-size: 1.2em;\\n  color: #999;\\n  margin-bottom: 0;\\n}\\nh2 {\\n  font-size: 2em;\\n  margin-top: 0;\\n  padding-top: 0;\\n}\\nnav a {\\n  padding: 5px 10px;\\n  text-decoration: none;\\n  margin-top: 10px;\\n  display: inline-block;\\n  background-color: #eee;\\n  border-radius: 4px;\\n}\\nnav a:visited, a:link {\\n  color: #607D8B;\\n}\\nnav a:hover {\\n  color: #039be5;\\n  background-color: #CFD8DC;\\n}\\nnav a.active {\\n  color: #039be5;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vagrant/comp467/frontend/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<h1>{{title}}</h1>\\n<!-- <nav>\\n  <a routerLink=\\\"/dashboard\\\">Dashboard</a>\\n  <a routerLink=\\\"/heroes\\\">Heroes</a>\\n</nav> -->\\n<router-outlet></router-outlet>\\n<app-messages></app-messages>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vagrant/comp467/frontend/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Draw Something';\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vagrant/comp467/frontend/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CanvasWhiteboardModule } from 'ng2-canvas-whiteboard';\n\nimport { AppComponent } from './app.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { WhiteboardComponent } from './whiteboard/whiteboard.component';\n\nimport { MessageService } from './message.service';\nimport { SettingsService } from './settings.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MessagesComponent,\n    WhiteboardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    CanvasWhiteboardModule,\n  ],\n  providers: [\n    MessageService,\n    SettingsService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/vagrant/comp467/frontend/src/app/app.module.ts","export class CanvasWhiteboardOptions {\n  // id?: number;\n  // batchUpdateTimeoutDuration?: number;\n  // imageUrl?: string;\n  aspectRatio?: number;\n  drawButtonEnabled?: boolean;\n  drawButtonClass?: string;\n  drawButtonText?: string;\n  clearButtonEnabled?: boolean;\n  clearButtonClass?: string;\n  clearButtonText?: string;\n  undoButtonEnabled?: boolean;\n  undoButtonClass?: string;\n  undoButtonText?: string;\n  redoButtonEnabled?: boolean;\n  // redoButtonClass?: string;\n  redoButtonText?: string;\n  colorPickerEnabled?: boolean;\n  saveDataButtonEnabled?: boolean;\n  saveDataButtonText?: string;\n  lineWidth?: number;\n  strokeColor?: string;\n  // saveDataButtonClass?: string;\n  shouldDownloadDrawing?: boolean;\n  // startingColor?: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vagrant/comp467/frontend/src/app/canvas_whiteboard_options.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vagrant/comp467/frontend/src/app/message.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* MessagesComponent's private CSS styles */\\nh2 {\\n  color: red;\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-weight: lighter;\\n}\\nbody {\\n  margin: 2em;\\n}\\nbody, input[text], button {\\n  color: crimson;\\n  font-family: Cambria, Georgia;\\n}\\n\\nbutton.clear {\\n  font-family: Arial;\\n  background-color: #eee;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  cursor: hand;\\n}\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\nbutton:disabled {\\n  background-color: #eee;\\n  color: #aaa;\\n  cursor: auto;\\n}\\nbutton.clear {\\n  color: #888;\\n  margin-bottom: 12px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vagrant/comp467/frontend/src/app/messages/messages.component.css\n// module id = ../../../../../src/app/messages/messages.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\n\\n  <h2>Log</h2>\\n  <button class=\\\"clear\\\"\\n    (click)=\\\"messageService.clear()\\\">clear</button>\\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vagrant/comp467/frontend/src/app/messages/messages.component.html\n// module id = ../../../../../src/app/messages/messages.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vagrant/comp467/frontend/src/app/messages/messages.component.ts","import { Injectable } from '@angular/core';\nimport { CanvasWhiteboardOptions } from './canvas_whiteboard_options';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { MessageService } from './message.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable()\nexport class SettingsService {\n\n  private settingsUrl = 'http://ec2-34-216-138-204.us-west-2.compute.amazonaws.com/api/settings';  // Todo: fix this, URL to web api\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** GET settings. */\n  getSettings(): Observable<CanvasWhiteboardOptions> {\n    return this.http.get<CanvasWhiteboardOptions>(this.settingsUrl).pipe(\n      tap(settings => this.log(`fetched settings, ${this.settingsUrl}`)),\n      catchError(this.handleError<CanvasWhiteboardOptions>(`getSettings`))\n    );\n  }\n\n  /** PUT: update the setting on the server */\n  updateSettings (setting: CanvasWhiteboardOptions): Observable<any> {\n    return this.http.put(this.settingsUrl, setting, httpOptions).pipe(\n      tap(_ => this.log(`updated settings, ${this.settingsUrl}`)),\n      catchError(this.handleError<any>('updateSettings'))\n    );\n  }\n\n  /** Log a SettingsService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add('SettingsService: ' + message);\n  }\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vagrant/comp467/frontend/src/app/settings.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vagrant/comp467/frontend/src/app/whiteboard/whiteboard.component.css\n// module id = ../../../../../src/app/whiteboard/whiteboard.component.css\n// module chunks = main","module.exports = \"<canvas-whiteboard #canvasWhiteboard\\n [options]=\\\"canvasOptions\\\"\\n (onBatchUpdate)=\\\"onCanvasDraw($event)\\\"\\n (onClear)=\\\"onCanvasClear()\\\"\\n (onUndo)=\\\"onCanvasUndo($event)\\\"\\n (onRedo)=\\\"onCanvasRedo($event)\\\">\\n</canvas-whiteboard>\\n\\n<div *ngIf=\\\"canvasOptions\\\">\\n  <label>Line Width:\\n    <input [(ngModel)]=\\\"canvasOptions.lineWidth\\\" placeholder=\\\"number\\\" (keyup)=\\\"save()\\\">\\n  </label>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/vagrant/comp467/frontend/src/app/whiteboard/whiteboard.component.html\n// module id = ../../../../../src/app/whiteboard/whiteboard.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { CanvasWhiteboardComponent } from 'ng2-canvas-whiteboard';\nimport { CanvasWhiteboardOptions } from '../canvas_whiteboard_options';\n\nimport { SettingsService } from '../settings.service';\n\n@Component({\n  selector: 'app-whiteboard',\n  viewProviders: [CanvasWhiteboardComponent],\n  templateUrl: './whiteboard.component.html',\n  styleUrls: ['./whiteboard.component.css']\n})\nexport class WhiteboardComponent implements OnInit {\n\n  // @Input() canvasOptions: CanvasWhiteboardOptions;\n  @Input() canvasOptions: CanvasWhiteboardOptions = {\n    // imageUrl: string,\n    aspectRatio: .5,\n    drawButtonEnabled: true,\n    drawButtonClass: \"drawButtonClass\",\n    drawButtonText: \"Draw\",\n    clearButtonEnabled: true,\n    clearButtonClass: \"clearButtonClass\",\n    clearButtonText: \"Clear\",\n    undoButtonText: \"Undo\",\n    undoButtonEnabled: true,\n    redoButtonText: \"Redo\",\n    redoButtonEnabled: true,\n    colorPickerEnabled: true,\n    saveDataButtonEnabled: true,\n    saveDataButtonText: \"Save\",\n    lineWidth: 10,\n    strokeColor: \"rgb(0,0,0)\",\n    shouldDownloadDrawing: true\n  };\n\n  constructor(private settingsService: SettingsService) { }\n\n  ngOnInit() {\n    this.getSettings();\n  }\n\n  getSettings(): void {\n    this.settingsService.getSettings()\n      .subscribe(canvasOptions => this.canvasOptions = canvasOptions);\n  }\n\n  save(): void {\n    this.settingsService.updateSettings(this.canvasOptions)\n      .subscribe(() => this.getSettings());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/vagrant/comp467/frontend/src/app/whiteboard/whiteboard.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/vagrant/comp467/frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/vagrant/comp467/frontend/src/main.ts"],"sourceRoot":"webpack:///"}